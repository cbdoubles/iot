{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3a92db75\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 1,\n  class: \"grid-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_loading = _resolveComponent(\"loading\");\n  const _component_ProductCard = _resolveComponent(\"ProductCard\");\n  return $data.loading ? (_openBlock(), _createBlock(_component_loading, {\n    key: 0,\n    active: $data.loading,\n    \"onUpdate:active\": _cache[0] || (_cache[0] = $event => $data.loading = $event),\n    \"can-cancel\": true,\n    \"on-cancel\": _ctx.onCancel,\n    \"is-full-page\": true\n  }, null, 8 /* PROPS */, [\"active\", \"on-cancel\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.pid\n    }, [_createVNode(_component_ProductCard, {\n      product: item.product,\n      image: item.image\n    }, null, 8 /* PROPS */, [\"product\", \"image\"])]);\n  }), 128 /* KEYED_FRAGMENT */))]));\n}","map":{"version":3,"names":["class","$data","loading","_createBlock","_component_loading","active","$event","_ctx","onCancel","_createElementBlock","_hoisted_1","_Fragment","_renderList","products","item","key","pid","_createVNode","_component_ProductCard","product","image"],"sources":["C:\\Users\\20223065\\Documents\\donationboxv2\\src\\views\\ShopView.vue"],"sourcesContent":["<template>\r\n    <template v-if=\"loading\">\r\n        <loading v-model:active=\"loading\"\r\n                 :can-cancel=\"true\"\r\n                 :on-cancel=\"onCancel\"\r\n                 :is-full-page=\"true\"\r\n                 \r\n                 />\r\n    </template>\r\n\r\n    <template v-else>\r\n        <div class=\"grid-container\">\r\n            <div v-for=\"(item) in products\" :key=\"item.pid\">\r\n                <ProductCard :product=\"item.product\" :image=\"item.image\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</template>\r\n\r\n\r\n    \r\n\r\n<script>\r\nimport ProductCard from '@/components/ProductCard.vue'\r\nimport axios from 'axios'\r\nimport Loading from 'vue-loading-overlay';\r\n\r\nexport default {\r\n    name: 'ShopView',\r\n    components: {\r\n        ProductCard,\r\n        Loading\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            loading: true,\r\n            products: [],\r\n        }\r\n    },\r\n    methods: {\r\n        getDataFromApi() {\r\n            this.loading = true\r\n            axios.get('/youApiUrl')\r\n                .then(response => {\r\n                    this.loading = false\r\n                    this.rows = response.data\r\n                })\r\n                .catch(error => {\r\n                    this.loading = false\r\n                    console.log(error)\r\n                })\r\n        }\r\n    }\r\n}\r\n</script>\r\n    \r\n<style scoped>\r\n.grid-container {\r\n    display: grid;\r\n    padding: -10px;\r\n    margin-left: 5%;\r\n    gap: 40px;\r\n    grid-template-columns: repeat(auto-fill, 208px);\r\n}\r\n</style>"],"mappings":";;;;EAWaA,KAAK,EAAC;;;;;SAVCC,KAAA,CAAAC,OAAO,I,cACnBC,YAAA,CAKWC,kBAAA;;IALMC,MAAM,EAAEJ,KAAA,CAAAC,OAAO;2DAAPD,KAAA,CAAAC,OAAO,GAAAI,MAAA;IACtB,YAAU,EAAE,IAAI;IAChB,WAAS,EAAEC,IAAA,CAAAC,QAAQ;IACnB,cAAY,EAAE;qEAMxBC,mBAAA,CAIM,OAJNC,UAIM,I,kBAHFD,mBAAA,CAEME,SAAA,QAAAC,WAAA,CAFgBX,KAAA,CAAAY,QAAQ,EAAjBC,IAAI;yBAAjBL,mBAAA,CAEM;MAF2BM,GAAG,EAAED,IAAI,CAACE;QACvCC,YAAA,CAA2DC,sBAAA;MAA7CC,OAAO,EAAEL,IAAI,CAACK,OAAO;MAAGC,KAAK,EAAEN,IAAI,CAACM"},"metadata":{},"sourceType":"module","externalDependencies":[]}