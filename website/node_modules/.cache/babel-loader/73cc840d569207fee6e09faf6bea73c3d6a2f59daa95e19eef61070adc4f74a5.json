{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7d4d3950\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"title\"\n}, \"Title:\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"description\"\n}, \"Description:\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"hello\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PopupBox = _resolveComponent(\"PopupBox\");\n  const _component_picture_input = _resolveComponent(\"picture-input\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.title = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.title]]), _hoisted_2, _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"description\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.description = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.description]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.submitForm && $options.submitForm(...args))\n  }, \"Submit\"), _createVNode(_component_PopupBox, {\n    ref: \"popupBox\"\n  }, null, 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_picture_input, {\n    ref: \"pictureInput\",\n    width: \"600\",\n    height: \"600\",\n    margin: \"16\",\n    accept: \"image/jpeg,image/png\",\n    size: \"10\",\n    \"button-class\": \"btn\",\n    \"custom-strings\": {\n      upload: '<h1>Bummer!</h1>',\n      drag: 'Drag a ðŸ˜º GIF or GTFO'\n    },\n    onChange: $options.onChange\n  }, null, 8 /* PROPS */, [\"onChange\"])])]);\n}","map":{"version":3,"names":["_createElementVNode","for","class","_createElementBlock","_hoisted_1","type","id","$data","title","$event","_hoisted_2","description","onClick","_cache","args","$options","submitForm","_createVNode","_component_PopupBox","ref","_hoisted_3","_component_picture_input","width","height","margin","accept","size","onChange"],"sources":["C:\\Users\\20223065\\Documents\\django_be\\website\\src\\components\\DonationInput.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <label for=\"title\">Title:</label>\r\n      <input type=\"text\" id=\"title\" v-model=\"title\" />\r\n  \r\n      <label for=\"description\">Description:</label>\r\n      <textarea id=\"description\" v-model=\"description\"></textarea>\r\n  \r\n      <button @click=\"submitForm\">Submit</button>\r\n      <PopupBox ref=\"popupBox\" />\r\n\r\n      <div class=\"hello\">    \r\n    <picture-input \r\n      ref=\"pictureInput\"\r\n      width=\"600\" \r\n      height=\"600\" \r\n      margin=\"16\" \r\n      accept=\"image/jpeg,image/png\" \r\n      size=\"10\" \r\n      button-class=\"btn\"\r\n      :custom-strings=\"{\r\n        upload: '<h1>Bummer!</h1>',\r\n        drag: 'Drag a ðŸ˜º GIF or GTFO'\r\n      }\"\r\n      @change=\"onChange\">\r\n    </picture-input>\r\n  </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import dblib from '@/dblib';\r\n  import PopupBox from '@/components/PopupBox.vue';\r\n  import PictureInput from 'vue-picture-input'\r\n\r\n  \r\n  export default {\r\n    components: {\r\n        PopupBox,\r\n        PictureInput\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        title: '',\r\n        description: '',\r\n        box: '',\r\n        box_id: '',\r\n        box_number: 0,\r\n        get_image: '',\r\n      };\r\n    },\r\n    mixins: [dblib],\r\n\r\n    methods: {\r\n      async submitForm() {\r\n        try {\r\n          await this.showPopup(`Go to Box ${this.box_number} to donate your item. Thank you!`);\r\n          await this.createProduct({\r\n            box_uid: this.box_id,\r\n            title: this.title, \r\n            description: this.description,\r\n            get_image: this.get_image,\r\n          });\r\n          this.$router.push({path: `/login`});\r\n  \r\n          // Optionally, you can handle the response - uncomment\r\n          // console.log('Server Response:', response.data);\r\n  \r\n          // Emit an event to notify the parent component\r\n          this.$emit('form-submitted', { \r\n            box_id: this.box_id,\r\n            box_number: this.box_number,\r\n            title: this.title, \r\n            description: this.description,\r\n            get_image: this.get_image,\r\n          });\r\n  \r\n        } catch (error) {\r\n          console.error('Error submitting form:', error);\r\n          // Optionally, you can handle errors and show a message to the user\r\n        }\r\n      },\r\n\r\n      onChange (image) {\r\n      console.log('New picture selected!')\r\n      if (image) {\r\n        console.log('Picture loaded.')\r\n        this.image = image\r\n        this.get_image = image.data\r\n        console.log(this.get_image)\r\n      } else {\r\n        console.log('FileReader API not supported: use the <form>, Luke!')\r\n      }\r\n    },\r\n\r\n      async showPopup(message) {\r\n            // Access the showPopup method of the PopupBox component\r\n            await this.$refs.popupBox.showPopup(message);\r\n        },\r\n    },\r\n\r\n    async created() {\r\n    // Call getItems when the component is created\r\n        try {\r\n            this.isLoading = true;\r\n            this.box = await this.getFreeBox();\r\n            console.log(\"Box_num: \", this.box.box_num);\r\n            if(this.box.box_num == -1) {\r\n              await this.showPopup(`There are no available boxes :((`);\r\n              this.$router.push({path: `/login`});\r\n            } else {\r\n              this.box_id = this.box.unique_ID;\r\n              this.box_number = this.box.box_num;\r\n              console.log(\"Box_id: \", this.box_id);\r\n              console.log(\"Box_num: \", this.box_number);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching product:', error);\r\n        } finally {\r\n            this.isLoading = false;\r\n        }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add styling if needed */\r\n  </style>\r\n  "],"mappings":";;gEAEMA,mBAAA,CAAiC;EAA1BC,GAAG,EAAC;AAAO,GAAC,QAAM;gEAGzBD,mBAAA,CAA6C;EAAtCC,GAAG,EAAC;AAAa,GAAC,cAAY;;EAMhCC,KAAK,EAAC;AAAO;;;;uBAVpBC,mBAAA,CA0BM,cAzBJC,UAAiC,E,gBACjCJ,mBAAA,CAAgD;IAAzCK,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,OAAO;+DAAUC,KAAA,CAAAC,KAAK,GAAAC,MAAA;iDAALF,KAAA,CAAAC,KAAK,E,GAE5CE,UAA6C,E,gBAC7CV,mBAAA,CAA4D;IAAlDM,EAAE,EAAC,aAAa;+DAAUC,KAAA,CAAAI,WAAW,GAAAF,MAAA;iDAAXF,KAAA,CAAAI,WAAW,E,GAE/CX,mBAAA,CAA2C;IAAlCY,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,QAAM,GAClCG,YAAA,CAA2BC,mBAAA;IAAjBC,GAAG,EAAC;EAAU,gCAExBnB,mBAAA,CAeE,OAfFoB,UAeE,GAdJH,YAAA,CAagBI,wBAAA;IAZdF,GAAG,EAAC,cAAc;IAClBG,KAAK,EAAC,KAAK;IACXC,MAAM,EAAC,KAAK;IACZC,MAAM,EAAC,IAAI;IACXC,MAAM,EAAC,sBAAsB;IAC7BC,IAAI,EAAC,IAAI;IACT,cAAY,EAAC,KAAK;IACjB,gBAAc,EAAE;;;KAGhB;IACAC,QAAM,EAAEZ,QAAA,CAAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}