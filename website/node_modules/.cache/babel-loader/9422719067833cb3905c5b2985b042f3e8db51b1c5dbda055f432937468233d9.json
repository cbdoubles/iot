{"ast":null,"code":"export default {\n  name: 'picture-input',\n  props: {\n    width: {\n      type: [String, Number],\n      default: Number.MAX_SAFE_INTEGER\n    },\n    height: {\n      type: [String, Number],\n      default: Number.MAX_SAFE_INTEGER\n    },\n    margin: {\n      type: [String, Number],\n      default: 0\n    },\n    accept: {\n      type: String,\n      default: 'image/*'\n    },\n    capture: {\n      type: String,\n      default: null\n    },\n    size: {\n      type: [String, Number],\n      default: Number.MAX_SAFE_INTEGER\n    },\n    name: {\n      type: String,\n      default: null\n    },\n    id: {\n      type: [String, Number],\n      default: null\n    },\n    buttonClass: {\n      type: String,\n      default: 'btn btn-primary button'\n    },\n    removeButtonClass: {\n      type: String,\n      default: 'btn btn-secondary button secondary'\n    },\n    aspectButtonClass: {\n      type: String,\n      default: 'btn btn-secondary button secondary'\n    },\n    prefill: {\n      // check for File API existence, do not fail with server side rendering\n      type: typeof File === 'undefined' || typeof Blob === 'undefined' ? [String] : [String, File, Blob],\n      default: ''\n    },\n    prefillOptions: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    crop: {\n      type: Boolean,\n      default: true\n    },\n    radius: {\n      type: [String, Number],\n      default: 0\n    },\n    removable: {\n      type: Boolean,\n      default: false\n    },\n    hideChangeButton: {\n      type: Boolean,\n      default: false\n    },\n    autoToggleAspectRatio: {\n      type: Boolean,\n      default: false\n    },\n    toggleAspectRatio: {\n      type: Boolean,\n      default: false\n    },\n    changeOnClick: {\n      type: Boolean,\n      default: true\n    },\n    plain: {\n      type: Boolean,\n      default: false\n    },\n    zIndex: {\n      type: Number,\n      default: 10000\n    },\n    alertOnError: {\n      type: Boolean,\n      default: true\n    },\n    customStrings: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    }\n  },\n  watch: {\n    prefill() {\n      if (this.prefill) {\n        this.preloadImage(this.prefill, this.prefillOptions);\n      } else {\n        this.removeImage();\n      }\n    }\n  },\n  data() {\n    return {\n      imageSelected: false,\n      previewHeight: 0,\n      previewWidth: 0,\n      draggingOver: false,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      strings: {\n        upload: '<p>Your device does not support file uploading.</p>',\n        drag: 'Drag an image or <br>click here to select a file',\n        tap: 'Tap here to select a photo <br>from your gallery',\n        change: 'Change Photo',\n        aspect: 'Landscape/Portrait',\n        remove: 'Remove Photo',\n        select: 'Select a Photo',\n        selected: '<p>Photo successfully selected!</p>',\n        fileSize: 'The file size exceeds the limit',\n        fileType: 'This file type is not supported.'\n      }\n    };\n  },\n  mounted() {\n    this.updateStrings();\n    if (this.prefill) {\n      this.preloadImage(this.prefill, this.prefillOptions);\n    }\n    this.$nextTick(() => {\n      window.addEventListener('resize', this.onResize);\n      this.onResize();\n    });\n    if (this.supportsPreview) {\n      this.pixelRatio = Math.round(window.devicePixelRatio || window.screen.deviceXDPI / window.screen.logicalXDPI);\n      const canvas = this.$refs.previewCanvas;\n      if (canvas.getContext) {\n        this.context = canvas.getContext('2d');\n        this.context.scale(this.pixelRatio, this.pixelRatio);\n      }\n    }\n    if (this.accept !== 'image/*') {\n      this.fileTypes = this.accept.split(',');\n      this.fileTypes = this.fileTypes.map(s => s.trim());\n    }\n    this.canvasWidth = this.width != Number.MAX_SAFE_INTEGER ? this.width : this.$refs.container.clientWidth;\n    this.canvasHeight = this.height != Number.MAX_SAFE_INTEGER ? this.height : this.canvasWidth;\n    this.previewWidth = this.canvasWidth;\n    this.previewHeight = this.canvasHeight;\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.onResize);\n  },\n  methods: {\n    updateStrings() {\n      for (let s in this.customStrings) {\n        if (s in this.strings && typeof this.customStrings[s] === 'string') {\n          this.strings[s] = this.customStrings[s];\n        }\n      }\n    },\n    onClick() {\n      if (!this.imageSelected) {\n        this.selectImage();\n        return;\n      }\n      if (this.changeOnClick) {\n        this.selectImage();\n      }\n      this.$emit('click');\n    },\n    onResize() {\n      if (this.resizeCanvas() && this.imageObject) {\n        this.drawImage(this.imageObject);\n      }\n    },\n    onDragEnter() {\n      if (!this.supportsDragAndDrop) {\n        return;\n      }\n      this.draggingOver = true;\n    },\n    onDragLeave() {\n      if (!this.supportsDragAndDrop) {\n        return;\n      }\n      this.draggingOver = false;\n    },\n    onFileDrop(e) {\n      this.onDragLeave();\n      this.$refs.fileInput.files = e.target.files || e.dataTransfer.files;\n      this.onFileChange(e);\n    },\n    onFileChange(e, prefill) {\n      const files = e.target.files || e.dataTransfer.files;\n      if (!files.length) {\n        return;\n      }\n      if (files[0].size <= 0 || files[0].size > this.size * 1024 * 1024) {\n        this.$emit('error', {\n          type: 'fileSize',\n          fileSize: files[0].size,\n          fileType: files[0].type,\n          fileName: files[0].name,\n          message: this.strings.fileSize + ' (' + this.size + 'MB)'\n        });\n        if (this.alertOnError) {\n          alert(this.strings.fileSize + ' (' + this.size + 'MB)');\n        }\n        return;\n      }\n      if (files[0].name === this.fileName && files[0].size === this.fileSize && this.fileModified === files[0].lastModified) {\n        return;\n      }\n      this.file = files[0];\n      this.fileName = files[0].name;\n      this.fileSize = files[0].size;\n      this.fileModified = files[0].lastModified;\n      this.fileType = files[0].type.split(';')[0];\n      if (this.accept === 'image/*') {\n        if (this.fileType.substr(0, 6) !== 'image/') {\n          return;\n        }\n      } else {\n        if (this.fileTypes.indexOf(this.fileType) === -1) {\n          this.$emit('error', {\n            type: 'fileType',\n            fileSize: this.fileSize,\n            fileType: this.fileType,\n            fileName: this.fileName,\n            message: this.strings.fileType\n          });\n          if (this.alertOnError) {\n            alert(this.strings.fileType);\n          }\n          return;\n        }\n      }\n      this.imageSelected = true;\n      this.image = '';\n      if (this.supportsPreview) {\n        this.loadImage(files[0], prefill || false);\n      } else {\n        if (prefill) {\n          this.$emit('prefill');\n        } else {\n          this.$emit('change', this.image);\n        }\n      }\n    },\n    loadImage(file, prefill) {\n      this.getEXIFOrientation(file, orientation => {\n        this.setOrientation(orientation);\n        let reader = new FileReader();\n        reader.onload = e => {\n          this.image = e.target.result;\n          this.imageObject = new Image();\n          this.imageObject.onload = () => {\n            if (this.autoToggleAspectRatio) {\n              let canvasOrientation = this.getOrientation(this.canvasWidth, this.canvasHeight);\n              let imageOrientation = this.getOrientation(this.imageObject.width, this.imageObject.height);\n              if (canvasOrientation !== imageOrientation) {\n                this.rotateCanvas();\n              }\n            }\n            this.drawImage(this.imageObject);\n          };\n          this.imageObject.src = this.image;\n        };\n        reader.readAsDataURL(file);\n      });\n    },\n    drawImage(image) {\n      this.imageWidth = image.width;\n      this.imageHeight = image.height;\n      this.imageRatio = image.width / image.height;\n      let offsetX = 0;\n      let offsetY = 0;\n      let scaledWidth = this.previewWidth;\n      let scaledHeight = this.previewHeight;\n      const previewRatio = this.previewWidth / this.previewHeight;\n      if (this.crop) {\n        if (this.imageRatio >= previewRatio) {\n          scaledWidth = scaledHeight * this.imageRatio;\n          offsetX = (this.previewWidth - scaledWidth) / 2;\n        } else {\n          scaledHeight = scaledWidth / this.imageRatio;\n          offsetY = (this.previewHeight - scaledHeight) / 2;\n        }\n      } else {\n        if (this.imageRatio >= previewRatio) {\n          scaledHeight = scaledWidth / this.imageRatio;\n          offsetY = (this.previewHeight - scaledHeight) / 2;\n        } else {\n          scaledWidth = scaledHeight * this.imageRatio;\n          offsetX = (this.previewWidth - scaledWidth) / 2;\n        }\n      }\n      const canvas = this.$refs.previewCanvas;\n      canvas.style.background = 'none';\n      canvas.width = this.previewWidth * this.pixelRatio;\n      canvas.height = this.previewHeight * this.pixelRatio;\n      this.context.setTransform(1, 0, 0, 1, 0, 0);\n      this.context.clearRect(0, 0, canvas.width, canvas.height);\n      if (this.rotate && typeof this.imageObject.style.imageOrientation === 'undefined') {\n        this.context.translate(offsetX * this.pixelRatio, offsetY * this.pixelRatio);\n        this.context.translate(scaledWidth / 2 * this.pixelRatio, scaledHeight / 2 * this.pixelRatio);\n        this.context.rotate(this.rotate);\n        offsetX = -scaledWidth / 2;\n        offsetY = -scaledHeight / 2;\n      }\n      this.context.drawImage(image, offsetX * this.pixelRatio, offsetY * this.pixelRatio, scaledWidth * this.pixelRatio, scaledHeight * this.pixelRatio);\n    },\n    selectImage() {\n      this.$refs.fileInput.click();\n    },\n    removeImage() {\n      this.$refs.fileInput.value = '';\n      this.$refs.fileInput.type = '';\n      this.$refs.fileInput.type = 'file';\n      this.fileName = '';\n      this.fileType = '';\n      this.fileSize = 0;\n      this.fileModified = 0;\n      this.imageSelected = false;\n      this.image = '';\n      this.file = null;\n      this.imageObject = null;\n      this.$refs.previewCanvas.style.backgroundColor = 'rgba(200,200,200,.25)';\n      this.$refs.previewCanvas.width = this.previewWidth * this.pixelRatio;\n      this.$emit('remove');\n    },\n    rotateImage() {\n      this.rotateCanvas();\n      if (this.imageObject) {\n        this.drawImage(this.imageObject);\n      }\n      let newOrientation = this.getOrientation(this.canvasWidth, this.canvasHeight);\n      this.$emit('aspectratiochange', newOrientation);\n    },\n    resizeCanvas() {\n      let previewRatio = this.canvasWidth / this.canvasHeight;\n      let newWidth = this.$refs.container.clientWidth;\n      if (!newWidth) return false;\n      if (!this.toggleAspectRatio && !this.autoToggleAspectRatio && newWidth === this.containerWidth) {\n        return false;\n      }\n      this.containerWidth = newWidth;\n      this.previewWidth = Math.min(this.containerWidth - this.margin * 2, this.canvasWidth);\n      this.previewHeight = this.previewWidth / previewRatio;\n      return true;\n    },\n    getOrientation(width, height) {\n      let orientation = 'square';\n      if (width > height) {\n        orientation = 'landscape';\n      } else if (width < height) {\n        orientation = 'portrait';\n      }\n      return orientation;\n    },\n    switchCanvasOrientation() {\n      const canvasWidth = this.canvasWidth;\n      const canvasHeight = this.canvasHeight;\n      this.canvasWidth = canvasHeight;\n      this.canvasHeight = canvasWidth;\n    },\n    rotateCanvas() {\n      this.switchCanvasOrientation();\n      this.resizeCanvas();\n    },\n    setOrientation(orientation) {\n      this.rotate = false;\n      if (orientation === 8) {\n        this.rotate = -Math.PI / 2;\n      } else if (orientation === 6) {\n        this.rotate = Math.PI / 2;\n      } else if (orientation === 3) {\n        this.rotate = -Math.PI;\n      }\n    },\n    getEXIFOrientation(file, callback) {\n      var reader = new FileReader();\n      reader.onload = e => {\n        var view = new DataView(e.target.result);\n        if (view.getUint16(0, false) !== 0xFFD8) {\n          return callback(-2);\n        }\n        var length = view.byteLength;\n        var offset = 2;\n        while (offset < length) {\n          var marker = view.getUint16(offset, false);\n          offset += 2;\n          if (marker === 0xFFE1) {\n            if (view.getUint32(offset += 2, false) !== 0x45786966) {\n              return callback(-1);\n            }\n            var little = view.getUint16(offset += 6, false) === 0x4949;\n            offset += view.getUint32(offset + 4, little);\n            var tags = view.getUint16(offset, little);\n            offset += 2;\n            for (var i = 0; i < tags; i++) {\n              if (view.getUint16(offset + i * 12, little) === 0x0112) {\n                return callback(view.getUint16(offset + i * 12 + 8, little));\n              }\n            }\n          } else if ((marker & 0xFF00) !== 0xFF00) {\n            break;\n          } else {\n            offset += view.getUint16(offset, false);\n          }\n        }\n        return callback(-1);\n      };\n      reader.readAsArrayBuffer(file.slice(0, 65536));\n    },\n    preloadImage(source, options) {\n      // ie 11 support\n      let File = window.File;\n      try {\n        new File([], ''); // eslint-disable-line\n      } catch (e) {\n        File = class File extends Blob {\n          constructor(chunks, filename, opts = {}) {\n            super(chunks, opts);\n            this.lastModifiedDate = new Date();\n            this.lastModified = +this.lastModifiedDate;\n            this.name = filename;\n          }\n        };\n      }\n      options = Object.assign({}, options);\n      if (typeof source === 'object') {\n        this.imageSelected = true;\n        this.image = '';\n        if (this.supportsPreview) {\n          this.loadImage(source, true);\n        } else {\n          this.$emit('prefill');\n        }\n        return;\n      }\n      if (source.indexOf('data:') === -1) {\n        if (source.indexOf('?') !== -1) {\n          source += '&_=' + new Date().getTime();\n        } else {\n          source += '?_=' + new Date().getTime();\n        }\n      }\n      let headers = new Headers();\n      headers.append('Accept', 'image/*');\n      fetch(source, {\n        method: 'GET',\n        mode: 'cors',\n        headers: headers\n      }).then(response => {\n        return response.blob();\n      }).then(imageBlob => {\n        let e = {\n          target: {\n            files: []\n          }\n        };\n        const fileName = options.fileName || source.split('/').slice(-1)[0];\n        let mediaType = options.mediaType || imageBlob.type || 'image/' + (options.fileType || fileName.split('?')[0].split('.').slice(-1)[0].split('?')[0]);\n        mediaType = mediaType.replace('jpg', 'jpeg');\n        mediaType = mediaType.replace('image/svg', 'image/svg+xml');\n        if (mediaType === 'image/svg') {\n          mediaType = 'image/svg+xml';\n        }\n        e.target.files[0] = new File([imageBlob], fileName, {\n          type: mediaType\n        });\n        this.onFileChange(e, true);\n      }).catch(err => {\n        this.$emit('error', {\n          type: 'failedPrefill',\n          message: 'Failed loading prefill image: ' + err\n        });\n        if (this.alertOnError) {\n          alert('Failed loading prefill image: ' + err);\n        }\n      });\n    }\n  },\n  computed: {\n    supportsUpload() {\n      if (navigator.userAgent.match(/(Android (1.0|1.1|1.5|1.6|2.0|2.1))|(Windows Phone (OS 7|8.0))|(XBLWP)|(ZuneWP)|(w(eb)?OSBrowser)|(webOS)|(Kindle\\/(1.0|2.0|2.5|3.0))/)) {\n        return false;\n      }\n      const el = document.createElement('input');\n      el.type = 'file';\n      return !el.disabled;\n    },\n    supportsPreview() {\n      return window.FileReader && !!window.CanvasRenderingContext2D;\n    },\n    supportsDragAndDrop() {\n      const div = document.createElement('div');\n      return ('draggable' in div || 'ondragstart' in div && 'ondrop' in div) && !('ontouchstart' in window || navigator.msMaxTouchPoints);\n    },\n    computedClasses() {\n      const classObject = {};\n      classObject['dragging-over'] = this.draggingOver;\n      return classObject;\n    },\n    fontSize() {\n      return Math.min(0.04 * this.previewWidth, 21) + 'px';\n    }\n  }\n};","map":{"version":3,"names":["name","props","width","type","String","Number","default","MAX_SAFE_INTEGER","height","margin","accept","capture","size","id","buttonClass","removeButtonClass","aspectButtonClass","prefill","File","Blob","prefillOptions","Object","crop","Boolean","radius","removable","hideChangeButton","autoToggleAspectRatio","toggleAspectRatio","changeOnClick","plain","zIndex","alertOnError","customStrings","watch","preloadImage","removeImage","data","imageSelected","previewHeight","previewWidth","draggingOver","canvasWidth","canvasHeight","strings","upload","drag","tap","change","aspect","remove","select","selected","fileSize","fileType","mounted","updateStrings","$nextTick","window","addEventListener","onResize","supportsPreview","pixelRatio","Math","round","devicePixelRatio","screen","deviceXDPI","logicalXDPI","canvas","$refs","previewCanvas","getContext","context","scale","fileTypes","split","map","s","trim","container","clientWidth","beforeDestroy","removeEventListener","methods","onClick","selectImage","$emit","resizeCanvas","imageObject","drawImage","onDragEnter","supportsDragAndDrop","onDragLeave","onFileDrop","e","fileInput","files","target","dataTransfer","onFileChange","length","fileName","message","alert","fileModified","lastModified","file","substr","indexOf","image","loadImage","getEXIFOrientation","orientation","setOrientation","reader","FileReader","onload","result","Image","canvasOrientation","getOrientation","imageOrientation","rotateCanvas","src","readAsDataURL","imageWidth","imageHeight","imageRatio","offsetX","offsetY","scaledWidth","scaledHeight","previewRatio","style","background","setTransform","clearRect","rotate","translate","click","value","backgroundColor","rotateImage","newOrientation","newWidth","containerWidth","min","switchCanvasOrientation","PI","callback","view","DataView","getUint16","byteLength","offset","marker","getUint32","little","tags","i","readAsArrayBuffer","slice","source","options","constructor","chunks","filename","opts","lastModifiedDate","Date","assign","getTime","headers","Headers","append","fetch","method","mode","then","response","blob","imageBlob","mediaType","replace","catch","err","computed","supportsUpload","navigator","userAgent","match","el","document","createElement","disabled","CanvasRenderingContext2D","div","msMaxTouchPoints","computedClasses","classObject","fontSize"],"sources":["C:\\Users\\20223065\\Documents\\django_be\\website\\node_modules\\vue-picture-input\\PictureInput.vue"],"sourcesContent":["<template>\n  <div ref=\"container\" id=\"picture-input\" class=\"picture-input\">\n    <div v-if=\"!supportsUpload\" v-html=\"strings.upload\"></div>\n    <div v-else-if=\"supportsPreview\">\n      <div class=\"preview-container\"\n        :style=\"{maxWidth: previewWidth + 'px', height: previewHeight + 'px', borderRadius: radius + '%'}\">\n          <canvas ref=\"previewCanvas\"\n            class=\"picture-preview\"\n            tabindex=\"0\"\n            :class=\"computedClasses\"\n            @drag.stop.prevent=\"\"\n            @dragover.stop.prevent=\"\"\n            @dragstart.stop.prevent=\"\"\n            @dragend.stop.prevent=\"\"\n            @dragenter.stop.prevent=\"onDragEnter\"\n            @dragleave.stop.prevent=\"onDragLeave\"\n            @drop.stop.prevent=\"onFileDrop\"\n            @click.prevent=\"onClick\"\n            @keyup.enter=\"onClick\"\n            :style=\"{height: previewHeight + 'px', zIndex: parseInt(zIndex) + 1 }\">\n          </canvas>\n        <div v-if=\"!imageSelected && !plain\"\n          class=\"picture-inner\"\n            :style=\"{top: -previewHeight + 'px', marginBottom: -previewHeight + 'px', fontSize: fontSize, borderRadius: radius + '%', zIndex: parseInt(zIndex) + 2}\">\n          <span v-if=\"supportsDragAndDrop\" class=\"picture-inner-text\" v-html=\"strings.drag\"></span>\n          <span v-else class=\"picture-inner-text\" v-html=\"strings.tap\"></span>\n        </div>\n      </div>\n      <button v-if=\"imageSelected && !hideChangeButton\" @click.prevent=\"selectImage\" :class=\"buttonClass\" type=\"button\">{{ strings.change }}</button>\n      <button v-if=\"imageSelected && removable\" @click.prevent=\"removeImage\" :class=\"removeButtonClass\" type=\"button\">{{ strings.remove }}</button>\n      <button v-if=\"imageSelected && toggleAspectRatio && width !== height\" @click.prevent=\"rotateImage\" :class=\"aspectButtonClass\" type=\"button\">{{ strings.aspect }}</button>\n    </div>\n    <div v-else>\n      <button v-if=\"!imageSelected\" @click.prevent=\"selectImage\" :class=\"buttonClass\" type=\"button\">{{ strings.select }}</button>\n      <div v-else>\n        <div v-html=\"strings.selected\"></div>\n        <button v-if=\"!hideChangeButton\" @click.prevent=\"selectImage\" :class=\"buttonClass\" type=\"button\">{{ strings.change }}</button>\n        <button v-if=\"removable\" @click.prevent=\"removeImage\" :class=\"removeButtonClass\" type=\"button\">{{ strings.remove }}</button>\n      </div>\n    </div>\n    <input ref=\"fileInput\" type=\"file\" :name=\"name\" :id=\"id\" :accept=\"accept\" @change=\"onFileChange\" :capture=\"capture\" />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'picture-input',\n  props: {\n    width: {\n      type: [String, Number],\n      default: Number.MAX_SAFE_INTEGER\n    },\n    height: {\n      type: [String, Number],\n      default: Number.MAX_SAFE_INTEGER\n    },\n    margin: {\n      type: [String, Number],\n      default: 0\n    },\n    accept: {\n      type: String,\n      default: 'image/*'\n    },\n    capture: {\n      type: String,\n      default: null\n    },\n    size: {\n      type: [String, Number],\n      default: Number.MAX_SAFE_INTEGER\n    },\n    name: {\n      type: String,\n      default: null\n    },\n    id: {\n      type: [String, Number],\n      default: null\n    },\n    buttonClass: {\n      type: String,\n      default: 'btn btn-primary button'\n    },\n    removeButtonClass: {\n      type: String,\n      default: 'btn btn-secondary button secondary'\n    },\n    aspectButtonClass: {\n      type: String,\n      default: 'btn btn-secondary button secondary'\n    },\n    prefill: {\n      // check for File API existence, do not fail with server side rendering\n      type: (typeof File === 'undefined' || typeof Blob === 'undefined') ? [String] : [String, File, Blob],\n      default: ''\n    },\n    prefillOptions: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    crop: {\n      type: Boolean,\n      default: true\n    },\n    radius: {\n      type: [String, Number],\n      default: 0\n    },\n    removable: {\n      type: Boolean,\n      default: false\n    },\n    hideChangeButton: {\n      type: Boolean,\n      default: false\n    },\n    autoToggleAspectRatio: {\n      type: Boolean,\n      default: false\n    },\n    toggleAspectRatio: {\n      type: Boolean,\n      default: false\n    },\n    changeOnClick: {\n      type: Boolean,\n      default: true\n    },\n    plain: {\n      type: Boolean,\n      default: false\n    },\n    zIndex: {\n      type: Number,\n      default: 10000\n    },\n    alertOnError: {\n      type: Boolean,\n      default: true\n    },\n    customStrings: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    }\n  },\n  watch: {\n    prefill () {\n      if (this.prefill) {\n        this.preloadImage(this.prefill, this.prefillOptions)\n      } else {\n        this.removeImage()\n      }\n    }\n  },\n  data () {\n    return {\n      imageSelected: false,\n      previewHeight: 0,\n      previewWidth: 0,\n      draggingOver: false,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      strings: {\n        upload: '<p>Your device does not support file uploading.</p>',\n        drag: 'Drag an image or <br>click here to select a file',\n        tap: 'Tap here to select a photo <br>from your gallery',\n        change: 'Change Photo',\n        aspect: 'Landscape/Portrait',\n        remove: 'Remove Photo',\n        select: 'Select a Photo',\n        selected: '<p>Photo successfully selected!</p>',\n        fileSize: 'The file size exceeds the limit',\n        fileType: 'This file type is not supported.'\n      }\n    }\n  },\n  mounted () {\n    this.updateStrings()\n    if (this.prefill) {\n      this.preloadImage(this.prefill, this.prefillOptions)\n    }\n\n    this.$nextTick(() => {\n      window.addEventListener('resize', this.onResize)\n      this.onResize()\n    })\n    if (this.supportsPreview) {\n      this.pixelRatio = Math.round(window.devicePixelRatio || window.screen.deviceXDPI / window.screen.logicalXDPI)\n      const canvas = this.$refs.previewCanvas\n      if (canvas.getContext) {\n        this.context = canvas.getContext('2d')\n        this.context.scale(this.pixelRatio, this.pixelRatio)\n      }\n    }\n    if (this.accept !== 'image/*') {\n      this.fileTypes = this.accept.split(',')\n      this.fileTypes = this.fileTypes.map(s => s.trim())\n    }\n    this.canvasWidth = this.width != Number.MAX_SAFE_INTEGER ? this.width : this.$refs.container.clientWidth \n    this.canvasHeight = this.height != Number.MAX_SAFE_INTEGER ? this.height : this.canvasWidth\n    this.previewWidth = this.canvasWidth\n    this.previewHeight = this.canvasHeight\n  },\n  beforeDestroy () {\n    window.removeEventListener('resize', this.onResize)\n  },\n  methods: {\n    updateStrings () {\n      for (let s in this.customStrings) {\n        if (s in this.strings && typeof this.customStrings[s] === 'string') {\n          this.strings[s] = this.customStrings[s]\n        }\n      }\n    },\n    onClick () {\n      if (!this.imageSelected) {\n        this.selectImage()\n        return\n      }\n\n      if (this.changeOnClick) {\n        this.selectImage()\n      }\n\n      this.$emit('click')\n    },\n    onResize () {\n      if (this.resizeCanvas() && this.imageObject) {\n        this.drawImage(this.imageObject)\n      }\n    },\n    onDragEnter () {\n      if (!this.supportsDragAndDrop) {\n        return\n      }\n      this.draggingOver = true\n    },\n    onDragLeave () {\n      if (!this.supportsDragAndDrop) {\n        return\n      }\n      this.draggingOver = false\n    },\n    onFileDrop (e) {\n      this.onDragLeave()\n      this.$refs.fileInput.files = e.target.files || e.dataTransfer.files\n      this.onFileChange(e)\n    },\n    onFileChange (e, prefill) {\n      const files = e.target.files || e.dataTransfer.files\n      if (!files.length) {\n        return\n      }\n      if (files[0].size <= 0 || files[0].size > this.size * 1024 * 1024) {\n        this.$emit('error', {\n          type: 'fileSize',\n          fileSize: files[0].size,\n          fileType: files[0].type,\n          fileName: files[0].name,\n          message: this.strings.fileSize + ' (' + this.size + 'MB)'\n        })\n        if (this.alertOnError) {\n          alert(this.strings.fileSize + ' (' + this.size + 'MB)')\n        }\n        return\n      }\n      if (files[0].name === this.fileName && files[0].size === this.fileSize && this.fileModified === files[0].lastModified) {\n        return\n      }\n\n      this.file = files[0]\n      this.fileName = files[0].name\n      this.fileSize = files[0].size\n      this.fileModified = files[0].lastModified\n      this.fileType = files[0].type.split(';')[0]\n\n      if (this.accept === 'image/*') {\n        if (this.fileType.substr(0, 6) !== 'image/') {\n          return\n        }\n      } else {\n        if (this.fileTypes.indexOf(this.fileType) === -1) {\n          this.$emit('error', {\n            type: 'fileType',\n            fileSize: this.fileSize,\n            fileType: this.fileType,\n            fileName: this.fileName,\n            message: this.strings.fileType\n          })\n          if (this.alertOnError) {\n            alert(this.strings.fileType)\n          }\n          return\n        }\n      }\n      this.imageSelected = true\n      this.image = ''\n      if (this.supportsPreview) {\n        this.loadImage(files[0], prefill || false)\n      } else {\n        if (prefill) {\n          this.$emit('prefill')\n        } else {\n          this.$emit('change', this.image)\n        }\n      }\n    },\n    loadImage (file, prefill) {\n      this.getEXIFOrientation(file, orientation => {\n        this.setOrientation(orientation)\n        let reader = new FileReader()\n        reader.onload = e => {\n          this.image = e.target.result\n          this.imageObject = new Image()\n          this.imageObject.onload = () => {\n            if (this.autoToggleAspectRatio) {\n              let canvasOrientation = this.getOrientation(this.canvasWidth, this.canvasHeight)\n              let imageOrientation = this.getOrientation(this.imageObject.width, this.imageObject.height)\n              if (canvasOrientation !== imageOrientation) {\n                this.rotateCanvas()\n              }\n            }\n            this.drawImage(this.imageObject)\n          }\n          this.imageObject.src = this.image\n        }\n        reader.readAsDataURL(file)\n      })\n    },\n    drawImage (image) {\n      this.imageWidth = image.width\n      this.imageHeight = image.height\n      this.imageRatio = image.width / image.height\n      let offsetX = 0\n      let offsetY = 0\n      let scaledWidth = this.previewWidth\n      let scaledHeight = this.previewHeight\n      const previewRatio = this.previewWidth / this.previewHeight\n      if (this.crop) {\n        if (this.imageRatio >= previewRatio) {\n          scaledWidth = scaledHeight * this.imageRatio\n          offsetX = (this.previewWidth - scaledWidth) / 2\n        } else {\n          scaledHeight = scaledWidth / this.imageRatio\n          offsetY = (this.previewHeight - scaledHeight) / 2\n        }\n      } else {\n        if (this.imageRatio >= previewRatio) {\n          scaledHeight = scaledWidth / this.imageRatio\n          offsetY = (this.previewHeight - scaledHeight) / 2\n        } else {\n          scaledWidth = scaledHeight * this.imageRatio\n          offsetX = (this.previewWidth - scaledWidth) / 2\n        }\n      }\n      const canvas = this.$refs.previewCanvas\n      canvas.style.background = 'none'\n      canvas.width = this.previewWidth * this.pixelRatio\n      canvas.height = this.previewHeight * this.pixelRatio\n      this.context.setTransform(1, 0, 0, 1, 0, 0)\n      this.context.clearRect(0, 0, canvas.width, canvas.height)\n      if (this.rotate && typeof this.imageObject.style.imageOrientation === 'undefined') {\n        this.context.translate(offsetX * this.pixelRatio, offsetY * this.pixelRatio)\n        this.context.translate(scaledWidth / 2 * this.pixelRatio, scaledHeight / 2 * this.pixelRatio)\n        this.context.rotate(this.rotate)\n        offsetX = -scaledWidth / 2\n        offsetY = -scaledHeight / 2\n      }\n      this.context.drawImage(image,\n        offsetX * this.pixelRatio,\n        offsetY * this.pixelRatio,\n        scaledWidth * this.pixelRatio,\n        scaledHeight * this.pixelRatio)\n    },\n    selectImage () {\n      this.$refs.fileInput.click()\n    },\n    removeImage () {\n      this.$refs.fileInput.value = ''\n      this.$refs.fileInput.type = ''\n      this.$refs.fileInput.type = 'file'\n      this.fileName = ''\n      this.fileType = ''\n      this.fileSize = 0\n      this.fileModified = 0\n      this.imageSelected = false\n      this.image = ''\n      this.file = null\n      this.imageObject = null\n      this.$refs.previewCanvas.style.backgroundColor = 'rgba(200,200,200,.25)'\n      this.$refs.previewCanvas.width = this.previewWidth * this.pixelRatio\n      this.$emit('remove')\n    },\n    rotateImage () {\n      this.rotateCanvas()\n\n      if (this.imageObject) {\n        this.drawImage(this.imageObject)\n      }\n\n      let newOrientation = this.getOrientation(this.canvasWidth, this.canvasHeight)\n      this.$emit('aspectratiochange', newOrientation)\n    },\n    resizeCanvas () {\n      let previewRatio = this.canvasWidth / this.canvasHeight\n      let newWidth = this.$refs.container.clientWidth\n      if( !newWidth ) return false;\n      if (!this.toggleAspectRatio && !this.autoToggleAspectRatio && newWidth === this.containerWidth) {\n        return false;\n      }\n      this.containerWidth = newWidth\n      this.previewWidth = Math.min(this.containerWidth - this.margin * 2, this.canvasWidth)\n      this.previewHeight = this.previewWidth / previewRatio\n      return true;\n    },\n    getOrientation (width, height) {\n      let orientation = 'square'\n\n      if (width > height) {\n        orientation = 'landscape'\n      } else if (width < height) {\n        orientation = 'portrait'\n      }\n\n      return orientation\n    },\n    switchCanvasOrientation () {\n      const canvasWidth = this.canvasWidth\n      const canvasHeight = this.canvasHeight\n\n      this.canvasWidth = canvasHeight\n      this.canvasHeight = canvasWidth\n    },\n    rotateCanvas () {\n      this.switchCanvasOrientation()\n      this.resizeCanvas()\n    },\n    setOrientation (orientation) {\n      this.rotate = false\n      if (orientation === 8) {\n        this.rotate = -Math.PI / 2\n      } else if (orientation === 6) {\n        this.rotate = Math.PI / 2\n      } else if (orientation === 3) {\n        this.rotate = -Math.PI\n      }\n    },\n    getEXIFOrientation (file, callback) {\n      var reader = new FileReader()\n      reader.onload = e => {\n        var view = new DataView(e.target.result)\n        if (view.getUint16(0, false) !== 0xFFD8) {\n          return callback(-2)\n        }\n        var length = view.byteLength\n        var offset = 2\n        while (offset < length) {\n          var marker = view.getUint16(offset, false)\n          offset += 2\n          if (marker === 0xFFE1) {\n            if (view.getUint32(offset += 2, false) !== 0x45786966) {\n              return callback(-1)\n            }\n            var little = view.getUint16(offset += 6, false) === 0x4949\n            offset += view.getUint32(offset + 4, little)\n            var tags = view.getUint16(offset, little)\n            offset += 2\n            for (var i = 0; i < tags; i++) {\n              if (view.getUint16(offset + (i * 12), little) === 0x0112) {\n                return callback(view.getUint16(offset + (i * 12) + 8, little))\n              }\n            }\n          } else if ((marker & 0xFF00) !== 0xFF00) {\n            break\n          } else {\n            offset += view.getUint16(offset, false)\n          }\n        }\n        return callback(-1)\n      }\n      reader.readAsArrayBuffer(file.slice(0, 65536))\n    },\n    preloadImage (source, options) {\n      // ie 11 support\n      let File = window.File\n      try {\n        new File([], '') // eslint-disable-line\n      } catch (e) {\n        File = class File extends Blob {\n          constructor (chunks, filename, opts = {}) {\n            super(chunks, opts)\n            this.lastModifiedDate = new Date()\n            this.lastModified = +this.lastModifiedDate\n            this.name = filename\n          }\n        }\n      }\n      options = Object.assign({}, options)\n      if (typeof source === 'object') {\n        this.imageSelected = true\n        this.image = ''\n        if (this.supportsPreview) {\n          this.loadImage(source, true)\n        } else {\n          this.$emit('prefill')\n        }\n        return\n      }\n      if (source.indexOf('data:') === -1) {\n        if (source.indexOf('?') !== -1) {\n          source += '&_=' + (new Date().getTime())\n        } else {\n          source += '?_=' + (new Date().getTime())\n        }\n      }\n      let headers = new Headers()\n      headers.append('Accept', 'image/*')\n      fetch(source, {\n        method: 'GET',\n        mode: 'cors',\n        headers: headers\n      }).then(response => {\n        return response.blob()\n      })\n      .then(imageBlob => {\n        let e = { target: { files: [] } }\n        const fileName = options.fileName || source.split('/').slice(-1)[0]\n        let mediaType = options.mediaType || imageBlob.type || ('image/' + (options.fileType || fileName.split('?')[0].split('.').slice(-1)[0].split('?')[0]))\n        mediaType = mediaType.replace('jpg', 'jpeg')\n        mediaType = mediaType.replace('image/svg', 'image/svg+xml')\n        if (mediaType === 'image/svg') {\n          mediaType = 'image/svg+xml'\n        }\n        e.target.files[0] = new File([imageBlob], fileName, { type: mediaType })\n        this.onFileChange(e, true)\n      })\n      .catch(err => {\n        this.$emit('error', {\n          type: 'failedPrefill',\n          message: 'Failed loading prefill image: ' + err\n        })\n        if (this.alertOnError) {\n          alert('Failed loading prefill image: ' + err)\n        }\n      })\n    }\n  },\n  computed: {\n    supportsUpload () {\n      if (navigator.userAgent.match(/(Android (1.0|1.1|1.5|1.6|2.0|2.1))|(Windows Phone (OS 7|8.0))|(XBLWP)|(ZuneWP)|(w(eb)?OSBrowser)|(webOS)|(Kindle\\/(1.0|2.0|2.5|3.0))/)) {\n        return false\n      }\n      const el = document.createElement('input')\n      el.type = 'file'\n      return !el.disabled\n    },\n    supportsPreview () {\n      return window.FileReader && !!window.CanvasRenderingContext2D\n    },\n    supportsDragAndDrop () {\n      const div = document.createElement('div')\n      return (('draggable' in div) || ('ondragstart' in div && 'ondrop' in div)) && !('ontouchstart' in window || navigator.msMaxTouchPoints)\n    },\n    computedClasses () {\n      const classObject = {}\n      classObject['dragging-over'] = this.draggingOver\n      return classObject\n    },\n    fontSize () {\n      return Math.min(0.04 * this.previewWidth, 21) + 'px'\n    }\n  }\n}\n</script>\n\n<style scoped>\n.picture-input {\n  width: 100%;\n  margin: 0 auto;\n  text-align: center;\n}\n.preview-container {\n  width: 100%;\n  box-sizing: border-box;\n  margin: 0 auto;\n  cursor: pointer;\n  overflow: hidden;\n  transform: translate3d(0,0,0);\n}\n.picture-preview {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 10001;\n  box-sizing: border-box;\n  background-color: rgba(200,200,200,.25);\n}\n.picture-preview.dragging-over {\n  filter: brightness(0.5);\n}\n.picture-inner {\n  position: relative;\n  z-index: 10002;\n  pointer-events: none;\n  box-sizing: border-box;\n  margin: 1em auto;\n  padding: 0.5em;\n  border: .3em dashed rgba(66,66,66,.15);\n  border-radius: 8px;\n  width: calc(100% - 2.5em);\n  height: calc(100% - 2.5em);\n  display: table;\n}\n.picture-inner .picture-inner-text {\n  display: table-cell;\n  vertical-align: middle;\n  text-align: center;\n  font-size: 2em;\n  line-height: 1.5;\n}\nbutton {\n  margin: 1em .25em;\n  cursor: pointer;\n}\ninput[type=file] {\n  display: none;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}