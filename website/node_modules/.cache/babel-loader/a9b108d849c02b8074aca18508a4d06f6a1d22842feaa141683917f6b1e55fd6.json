{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nconst dblib = {\n  data() {\n    return {\n      isLoading: false,\n      rfid: -1,\n      arduino: 'http://192.168.178.157',\n      database: 'http://127.0.0.1:8000',\n      // database: 'localhost:####',\n      products: []\n    };\n  },\n  methods: {\n    async login() {\n      this.isLoading = true;\n      await new Promise(r => setTimeout(r, 2000));\n      console.log(\"Test\");\n      this.rfid = -1;\n      // this.scanRFID()\n      this.verifyLogin();\n      this.isLoading = false;\n    },\n    // Waits for the arduino to send a uuid.\n    // currently it will not time out or anything.\n    async scanRFID() {\n      axios.get(this.arduino + '/rfid').then(response => {\n        this.rfid = response;\n      }).catch(error => {\n        this.isLoading = false;\n        console.log(error);\n      });\n    },\n    // Checks the uuid gotten from the arduino against database.\n    // if valid user, go to the browse page.\n    async verifyLogin() {\n      axios.post(this.database + '/api/v1/verify-login/', {\n        nfc_id: this.rfid\n      }).then(response => {\n        if (response.data[0]) {\n          this.$router.push('/browse');\n        } else {\n          console.log('invalid uuid.');\n          // pop\n          this.$router.push('/login');\n        }\n      }).catch(error => {\n        this.isLoading = false;\n        console.log(error);\n      });\n    },\n    // Get items from the database, store them in products.\n    async getItems() {\n      this.isLoading = true;\n      try {\n        const response = await axios.get(this.database + '/api/v1/latest-products/');\n        this.products = response.data;\n      } catch (error) {\n        console.error('Error fetching items:', error);\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    // get a singular product from the database\n    async getProduct(pid) {\n      try {\n        this.isLoading = true;\n        const response = await axios.get(`${this.database}/api/v1/boxes/product/${pid}`);\n        this.product = response.data;\n        return response.data; // Return the data received from the endpoint\n      } catch (error) {\n        console.error('Error fetching product:', error);\n        // return {pid: 1, product: 'tshirt', image: 'https://picsum.photos/200', description: 'This is a description that is way too'};\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async getFreeBox() {\n      try {\n        this.isLoading = true;\n        const response = await axios.get(`${this.database}/api/v1/check-free-box/`);\n        this.box = response.data;\n        return response.data; // Return the data received from the endpoint\n      } catch (error) {\n        console.error('Error fetching product:', error);\n        // return {pid: 1, product: 'tshirt', image: 'https://picsum.photos/200', description: 'This is a description that is way too'};\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async createProduct(product) {\n      // const productId = product.pid;  // Assuming you have an 'id' property in your product data\n      try {\n        // Make an API request to submit the data\n        const response = await axios.post(`${this.database}/api/v1/create-product/`, {\n          box_uid: product.box_uid,\n          title: product.title,\n          description: product.description,\n          get_image: product.get_image\n        });\n        console.log(response.data.message); // Log the server response\n        // Optionally, you can perform additional actions based on the response\n      } catch (error) {\n        console.error('Error deleting product:', error);\n        // Optionally, you can handle the error, show a message, etc.\n      }\n    },\n    async deleteProduct(product) {\n      // const productId = product.pid;  // Assuming you have an 'id' property in your product data\n      try {\n        const response = await axios.post(`${this.database}/api/v1/delete-product/`, {\n          box_id: product.box_id\n        });\n        console.log(response.data.message); // Log the server response\n        // Optionally, you can perform additional actions based on the response\n      } catch (error) {\n        console.error('Error deleting product:', error);\n        // Optionally, you can handle the error, show a message, etc.\n      }\n    }\n  }\n};\nexport default dblib;","map":{"version":3,"names":["axios","dblib","data","isLoading","rfid","arduino","database","products","methods","login","Promise","r","setTimeout","console","log","verifyLogin","scanRFID","get","then","response","catch","error","post","nfc_id","$router","push","getItems","getProduct","pid","product","getFreeBox","box","createProduct","box_uid","title","description","get_image","message","deleteProduct","box_id"],"sources":["C:/Users/20223065/Documents/django_be/website/src/dblib.js"],"sourcesContent":["import axios from 'axios'\r\nconst dblib = {\r\n\r\n  data() {\r\n    return {\r\n      isLoading: false,\r\n      rfid: -1,\r\n      arduino: 'http://192.168.178.157',\r\n      database: 'http://127.0.0.1:8000',\r\n      // database: 'localhost:####',\r\n      products: [],\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    async login() {\r\n      this.isLoading = true;\r\n      await new Promise(r => setTimeout(r, 2000));\r\n      console.log(\"Test\")\r\n      this.rfid = -1\r\n      // this.scanRFID()\r\n      this.verifyLogin()\r\n      this.isLoading = false;\r\n    },\r\n\r\n\r\n    // Waits for the arduino to send a uuid.\r\n    // currently it will not time out or anything.\r\n    async scanRFID() {\r\n      axios.get(this.arduino + '/rfid')\r\n        .then(response => { this.rfid = response })\r\n        .catch(error => {\r\n          this.isLoading = false\r\n          console.log(error)\r\n        })\r\n    },\r\n\r\n    // Checks the uuid gotten from the arduino against database.\r\n    // if valid user, go to the browse page.\r\n    async verifyLogin() {\r\n      axios.post(this.database + '/api/v1/verify-login/', {nfc_id: this.rfid})\r\n        .then(response => {\r\n          if (response.data[0]) {\r\n            this.$router.push('/browse')\r\n          } else {\r\n            console.log('invalid uuid.')\r\n            // pop\r\n            this.$router.push('/login')\r\n          }\r\n        })\r\n        .catch(error => {\r\n          this.isLoading = false\r\n          console.log(error)\r\n        })\r\n    },\r\n\r\n  // Get items from the database, store them in products.\r\n    async getItems() {\r\n      this.isLoading = true;\r\n    \r\n      try {\r\n        const response = await axios.get(this.database + '/api/v1/latest-products/');\r\n        this.products = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching items:', error);\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n  \r\n    // get a singular product from the database\r\n    async getProduct(pid) {\r\n      try {\r\n        this.isLoading = true;\r\n    \r\n        const response = await axios.get(`${this.database}/api/v1/boxes/product/${pid}`);\r\n        this.product = response.data;\r\n    \r\n        return response.data;  // Return the data received from the endpoint\r\n      } catch (error) {\r\n        console.error('Error fetching product:', error);\r\n        // return {pid: 1, product: 'tshirt', image: 'https://picsum.photos/200', description: 'This is a description that is way too'};\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    async getFreeBox() {\r\n      try {\r\n        this.isLoading = true;\r\n        const response = await axios.get(`${this.database}/api/v1/check-free-box/`);\r\n        this.box = response.data;\r\n        return response.data;  // Return the data received from the endpoint\r\n      } catch (error) {\r\n        console.error('Error fetching product:', error);\r\n        // return {pid: 1, product: 'tshirt', image: 'https://picsum.photos/200', description: 'This is a description that is way too'};\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    async createProduct(product) {\r\n      // const productId = product.pid;  // Assuming you have an 'id' property in your product data\r\n      try {\r\n        // Make an API request to submit the data\r\n        const response = await axios.post(`${this.database}/api/v1/create-product/`, {\r\n          box_uid: product.box_uid,\r\n          title: product.title, \r\n          description: product.description,\r\n          get_image: product.get_image,\r\n        });\r\n        console.log(response.data.message);  // Log the server response\r\n          // Optionally, you can perform additional actions based on the response\r\n      } catch (error) {\r\n          console.error('Error deleting product:', error);\r\n          // Optionally, you can handle the error, show a message, etc.\r\n      }\r\n    },\r\n    \r\n    async deleteProduct(product) {\r\n      // const productId = product.pid;  // Assuming you have an 'id' property in your product data\r\n      try {\r\n        const response = await axios.post(`${this.database}/api/v1/delete-product/`, { box_id: product.box_id });\r\n        console.log(response.data.message);  // Log the server response\r\n          // Optionally, you can perform additional actions based on the response\r\n      } catch (error) {\r\n          console.error('Error deleting product:', error);\r\n          // Optionally, you can handle the error, show a message, etc.\r\n      }\r\n    },\r\n\r\n  },\r\n}\r\n\r\nexport default dblib"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,KAAK,GAAG;EAEZC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,IAAI,EAAE,CAAC,CAAC;MACRC,OAAO,EAAE,wBAAwB;MACjCC,QAAQ,EAAE,uBAAuB;MACjC;MACAC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI,CAACN,SAAS,GAAG,IAAI;MACrB,MAAM,IAAIO,OAAO,CAACC,CAAC,IAAIC,UAAU,CAACD,CAAC,EAAE,IAAI,CAAC,CAAC;MAC3CE,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnB,IAAI,CAACV,IAAI,GAAG,CAAC,CAAC;MACd;MACA,IAAI,CAACW,WAAW,CAAC,CAAC;MAClB,IAAI,CAACZ,SAAS,GAAG,KAAK;IACxB,CAAC;IAGD;IACA;IACA,MAAMa,QAAQA,CAAA,EAAG;MACfhB,KAAK,CAACiB,GAAG,CAAC,IAAI,CAACZ,OAAO,GAAG,OAAO,CAAC,CAC9Ba,IAAI,CAACC,QAAQ,IAAI;QAAE,IAAI,CAACf,IAAI,GAAGe,QAAQ;MAAC,CAAC,CAAC,CAC1CC,KAAK,CAACC,KAAK,IAAI;QACd,IAAI,CAAClB,SAAS,GAAG,KAAK;QACtBU,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;MACpB,CAAC,CAAC;IACN,CAAC;IAED;IACA;IACA,MAAMN,WAAWA,CAAA,EAAG;MAClBf,KAAK,CAACsB,IAAI,CAAC,IAAI,CAAChB,QAAQ,GAAG,uBAAuB,EAAE;QAACiB,MAAM,EAAE,IAAI,CAACnB;MAAI,CAAC,CAAC,CACrEc,IAAI,CAACC,QAAQ,IAAI;QAChB,IAAIA,QAAQ,CAACjB,IAAI,CAAC,CAAC,CAAC,EAAE;UACpB,IAAI,CAACsB,OAAO,CAACC,IAAI,CAAC,SAAS,CAAC;QAC9B,CAAC,MAAM;UACLZ,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;UAC5B;UACA,IAAI,CAACU,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;QAC7B;MACF,CAAC,CAAC,CACDL,KAAK,CAACC,KAAK,IAAI;QACd,IAAI,CAAClB,SAAS,GAAG,KAAK;QACtBU,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;MACpB,CAAC,CAAC;IACN,CAAC;IAEH;IACE,MAAMK,QAAQA,CAAA,EAAG;MACf,IAAI,CAACvB,SAAS,GAAG,IAAI;MAErB,IAAI;QACF,MAAMgB,QAAQ,GAAG,MAAMnB,KAAK,CAACiB,GAAG,CAAC,IAAI,CAACX,QAAQ,GAAG,0BAA0B,CAAC;QAC5E,IAAI,CAACC,QAAQ,GAAGY,QAAQ,CAACjB,IAAI;MAC/B,CAAC,CAAC,OAAOmB,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,SAAS;QACR,IAAI,CAAClB,SAAS,GAAG,KAAK;MACxB;IACF,CAAC;IAED;IACA,MAAMwB,UAAUA,CAACC,GAAG,EAAE;MACpB,IAAI;QACF,IAAI,CAACzB,SAAS,GAAG,IAAI;QAErB,MAAMgB,QAAQ,GAAG,MAAMnB,KAAK,CAACiB,GAAG,CAAE,GAAE,IAAI,CAACX,QAAS,yBAAwBsB,GAAI,EAAC,CAAC;QAChF,IAAI,CAACC,OAAO,GAAGV,QAAQ,CAACjB,IAAI;QAE5B,OAAOiB,QAAQ,CAACjB,IAAI,CAAC,CAAE;MACzB,CAAC,CAAC,OAAOmB,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C;MACF,CAAC,SAAS;QACR,IAAI,CAAClB,SAAS,GAAG,KAAK;MACxB;IACF,CAAC;IAED,MAAM2B,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,IAAI,CAAC3B,SAAS,GAAG,IAAI;QACrB,MAAMgB,QAAQ,GAAG,MAAMnB,KAAK,CAACiB,GAAG,CAAE,GAAE,IAAI,CAACX,QAAS,yBAAwB,CAAC;QAC3E,IAAI,CAACyB,GAAG,GAAGZ,QAAQ,CAACjB,IAAI;QACxB,OAAOiB,QAAQ,CAACjB,IAAI,CAAC,CAAE;MACzB,CAAC,CAAC,OAAOmB,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C;MACF,CAAC,SAAS;QACR,IAAI,CAAClB,SAAS,GAAG,KAAK;MACxB;IACF,CAAC;IAED,MAAM6B,aAAaA,CAACH,OAAO,EAAE;MAC3B;MACA,IAAI;QACF;QACA,MAAMV,QAAQ,GAAG,MAAMnB,KAAK,CAACsB,IAAI,CAAE,GAAE,IAAI,CAAChB,QAAS,yBAAwB,EAAE;UAC3E2B,OAAO,EAAEJ,OAAO,CAACI,OAAO;UACxBC,KAAK,EAAEL,OAAO,CAACK,KAAK;UACpBC,WAAW,EAAEN,OAAO,CAACM,WAAW;UAChCC,SAAS,EAAEP,OAAO,CAACO;QACrB,CAAC,CAAC;QACFvB,OAAO,CAACC,GAAG,CAACK,QAAQ,CAACjB,IAAI,CAACmC,OAAO,CAAC,CAAC,CAAE;QACnC;MACJ,CAAC,CAAC,OAAOhB,KAAK,EAAE;QACZR,OAAO,CAACQ,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C;MACJ;IACF,CAAC;IAED,MAAMiB,aAAaA,CAACT,OAAO,EAAE;MAC3B;MACA,IAAI;QACF,MAAMV,QAAQ,GAAG,MAAMnB,KAAK,CAACsB,IAAI,CAAE,GAAE,IAAI,CAAChB,QAAS,yBAAwB,EAAE;UAAEiC,MAAM,EAAEV,OAAO,CAACU;QAAO,CAAC,CAAC;QACxG1B,OAAO,CAACC,GAAG,CAACK,QAAQ,CAACjB,IAAI,CAACmC,OAAO,CAAC,CAAC,CAAE;QACnC;MACJ,CAAC,CAAC,OAAOhB,KAAK,EAAE;QACZR,OAAO,CAACQ,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C;MACJ;IACF;EAEF;AACF,CAAC;AAED,eAAepB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}