{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport dblib from '@/dblib';\nimport PopupBox from '@/components/PopupBox.vue';\nexport default {\n  components: {\n    PopupBox\n  },\n  data() {\n    return {\n      title: '',\n      description: '',\n      box: '',\n      box_id: '',\n      box_number: 0,\n      get_image: ''\n    };\n  },\n  mixins: [dblib],\n  methods: {\n    async submitForm() {\n      try {\n        await this.showPopup(`Go to Box ${this.box_number} to donate your item. Thank you!`);\n        await this.createProduct({\n          box_uid: this.box_id,\n          title: this.title,\n          description: this.description,\n          get_image: this.get_image\n        });\n        this.$router.push({\n          path: `/login`\n        });\n\n        // Optionally, you can handle the response - uncomment\n        // console.log('Server Response:', response.data);\n\n        // Emit an event to notify the parent component\n        this.$emit('form-submitted', {\n          box_id: this.box_id,\n          box_number: this.box_number,\n          title: this.title,\n          description: this.description,\n          get_image: this.get_image\n        });\n      } catch (error) {\n        console.error('Error submitting form:', error);\n        // Optionally, you can handle errors and show a message to the user\n      }\n    },\n    async showPopup(message) {\n      // Access the showPopup method of the PopupBox component\n      await this.$refs.popupBox.showPopup(message);\n    }\n  },\n  async created() {\n    // Call getItems when the component is created\n    try {\n      this.isLoading = true;\n      this.box = await this.getFreeBox();\n      console.log(\"Box_num: \", this.box.box_num);\n      if (this.box.box_num == -1) {\n        await this.showPopup(`There are no available boxes :((`);\n        this.$router.push({\n          path: `/login`\n        });\n      } else {\n        this.box_id = this.box.unique_ID;\n        this.box_number = this.box.box_num;\n        console.log(\"Box_id: \", this.box_id);\n        console.log(\"Box_num: \", this.box_number);\n      }\n    } catch (error) {\n      console.error('Error fetching product:', error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n};","map":{"version":3,"names":["dblib","PopupBox","components","data","title","description","box","box_id","box_number","get_image","mixins","methods","submitForm","showPopup","createProduct","box_uid","$router","push","path","$emit","error","console","message","$refs","popupBox","created","isLoading","getFreeBox","log","box_num","unique_ID"],"sources":["C:\\Users\\20223065\\Documents\\django_be\\website\\src\\components\\DonationInput.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <label for=\"title\">Title:</label>\r\n      <input type=\"text\" id=\"title\" v-model=\"title\" />\r\n  \r\n      <label for=\"description\">Description:</label>\r\n      <textarea id=\"description\" v-model=\"description\"></textarea>\r\n  \r\n      <button @click=\"submitForm\">Submit</button>\r\n      <PopupBox ref=\"popupBox\" />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import dblib from '@/dblib';\r\n  import PopupBox from '@/components/PopupBox.vue';\r\n  \r\n  export default {\r\n    components: {\r\n        PopupBox,\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        title: '',\r\n        description: '',\r\n        box: '',\r\n        box_id: '',\r\n        box_number: 0,\r\n        get_image: '',\r\n      };\r\n    },\r\n    mixins: [dblib],\r\n\r\n    methods: {\r\n      async submitForm() {\r\n        try {\r\n          await this.showPopup(`Go to Box ${this.box_number} to donate your item. Thank you!`);\r\n          await this.createProduct({\r\n            box_uid: this.box_id,\r\n            title: this.title, \r\n            description: this.description,\r\n            get_image: this.get_image,\r\n          });\r\n          this.$router.push({path: `/login`});\r\n  \r\n          // Optionally, you can handle the response - uncomment\r\n          // console.log('Server Response:', response.data);\r\n  \r\n          // Emit an event to notify the parent component\r\n          this.$emit('form-submitted', { \r\n            box_id: this.box_id,\r\n            box_number: this.box_number,\r\n            title: this.title, \r\n            description: this.description,\r\n            get_image: this.get_image,\r\n          });\r\n  \r\n        } catch (error) {\r\n          console.error('Error submitting form:', error);\r\n          // Optionally, you can handle errors and show a message to the user\r\n        }\r\n      },\r\n\r\n      async showPopup(message) {\r\n            // Access the showPopup method of the PopupBox component\r\n            await this.$refs.popupBox.showPopup(message);\r\n        },\r\n    },\r\n\r\n    async created() {\r\n    // Call getItems when the component is created\r\n        try {\r\n            this.isLoading = true;\r\n            this.box = await this.getFreeBox();\r\n            console.log(\"Box_num: \", this.box.box_num);\r\n            if(this.box.box_num == -1) {\r\n              await this.showPopup(`There are no available boxes :((`);\r\n              this.$router.push({path: `/login`});\r\n            } else {\r\n              this.box_id = this.box.unique_ID;\r\n              this.box_number = this.box.box_num;\r\n              console.log(\"Box_id: \", this.box_id);\r\n              console.log(\"Box_num: \", this.box_number);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching product:', error);\r\n        } finally {\r\n            this.isLoading = false;\r\n        }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add styling if needed */\r\n  </style>\r\n  "],"mappings":";AAcE,OAAOA,KAAI,MAAO,SAAS;AAC3B,OAAOC,QAAO,MAAO,2BAA2B;AAEhD,eAAe;EACbC,UAAU,EAAE;IACRD;EACJ,CAAC;EAEDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,GAAG,EAAE,EAAE;MACPC,MAAM,EAAE,EAAE;MACVC,UAAU,EAAE,CAAC;MACbC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,MAAM,EAAE,CAACV,KAAK,CAAC;EAEfW,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAM,IAAI,CAACC,SAAS,CAAE,aAAY,IAAI,CAACL,UAAU,kCAAkC,CAAC;QACpF,MAAM,IAAI,CAACM,aAAa,CAAC;UACvBC,OAAO,EAAE,IAAI,CAACR,MAAM;UACpBH,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,WAAW,EAAE,IAAI,CAACA,WAAW;UAC7BI,SAAS,EAAE,IAAI,CAACA;QAClB,CAAC,CAAC;QACF,IAAI,CAACO,OAAO,CAACC,IAAI,CAAC;UAACC,IAAI,EAAG;QAAO,CAAC,CAAC;;QAEnC;QACA;;QAEA;QACA,IAAI,CAACC,KAAK,CAAC,gBAAgB,EAAE;UAC3BZ,MAAM,EAAE,IAAI,CAACA,MAAM;UACnBC,UAAU,EAAE,IAAI,CAACA,UAAU;UAC3BJ,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,WAAW,EAAE,IAAI,CAACA,WAAW;UAC7BI,SAAS,EAAE,IAAI,CAACA;QAClB,CAAC,CAAC;MAEJ,EAAE,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9C;MACF;IACF,CAAC;IAED,MAAMP,SAASA,CAACS,OAAO,EAAE;MACnB;MACA,MAAM,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACX,SAAS,CAACS,OAAO,CAAC;IAChD;EACJ,CAAC;EAED,MAAMG,OAAOA,CAAA,EAAG;IAChB;IACI,IAAI;MACA,IAAI,CAACC,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACpB,GAAE,GAAI,MAAM,IAAI,CAACqB,UAAU,CAAC,CAAC;MAClCN,OAAO,CAACO,GAAG,CAAC,WAAW,EAAE,IAAI,CAACtB,GAAG,CAACuB,OAAO,CAAC;MAC1C,IAAG,IAAI,CAACvB,GAAG,CAACuB,OAAM,IAAK,CAAC,CAAC,EAAE;QACzB,MAAM,IAAI,CAAChB,SAAS,CAAE,kCAAiC,CAAC;QACxD,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC;UAACC,IAAI,EAAG;QAAO,CAAC,CAAC;MACrC,OAAO;QACL,IAAI,CAACX,MAAK,GAAI,IAAI,CAACD,GAAG,CAACwB,SAAS;QAChC,IAAI,CAACtB,UAAS,GAAI,IAAI,CAACF,GAAG,CAACuB,OAAO;QAClCR,OAAO,CAACO,GAAG,CAAC,UAAU,EAAE,IAAI,CAACrB,MAAM,CAAC;QACpCc,OAAO,CAACO,GAAG,CAAC,WAAW,EAAE,IAAI,CAACpB,UAAU,CAAC;MAC3C;IACJ,EAAE,OAAOY,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD,UAAU;MACN,IAAI,CAACM,SAAQ,GAAI,KAAK;IAC1B;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}